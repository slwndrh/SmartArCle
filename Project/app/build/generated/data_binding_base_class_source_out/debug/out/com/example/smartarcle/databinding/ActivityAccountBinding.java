// Generated by view binder compiler. Do not edit!
package com.example.smartarcle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartarcle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView account;

  @NonNull
  public final TextView as;

  @NonNull
  public final CardView cvOwnerAcc;

  @NonNull
  public final CardView cvSecurityAcc;

  @NonNull
  public final ImageView ivOwnerAcc;

  @NonNull
  public final ImageView ivSecurityAcc;

  @NonNull
  public final TextView tvOwnerAcc;

  @NonNull
  public final TextView tvSecurityAcc;

  private ActivityAccountBinding(@NonNull ConstraintLayout rootView, @NonNull TextView account,
      @NonNull TextView as, @NonNull CardView cvOwnerAcc, @NonNull CardView cvSecurityAcc,
      @NonNull ImageView ivOwnerAcc, @NonNull ImageView ivSecurityAcc, @NonNull TextView tvOwnerAcc,
      @NonNull TextView tvSecurityAcc) {
    this.rootView = rootView;
    this.account = account;
    this.as = as;
    this.cvOwnerAcc = cvOwnerAcc;
    this.cvSecurityAcc = cvSecurityAcc;
    this.ivOwnerAcc = ivOwnerAcc;
    this.ivSecurityAcc = ivSecurityAcc;
    this.tvOwnerAcc = tvOwnerAcc;
    this.tvSecurityAcc = tvSecurityAcc;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.account;
      TextView account = ViewBindings.findChildViewById(rootView, id);
      if (account == null) {
        break missingId;
      }

      id = R.id.as;
      TextView as = ViewBindings.findChildViewById(rootView, id);
      if (as == null) {
        break missingId;
      }

      id = R.id.cv_owner_acc;
      CardView cvOwnerAcc = ViewBindings.findChildViewById(rootView, id);
      if (cvOwnerAcc == null) {
        break missingId;
      }

      id = R.id.cv_security_acc;
      CardView cvSecurityAcc = ViewBindings.findChildViewById(rootView, id);
      if (cvSecurityAcc == null) {
        break missingId;
      }

      id = R.id.iv_owner_acc;
      ImageView ivOwnerAcc = ViewBindings.findChildViewById(rootView, id);
      if (ivOwnerAcc == null) {
        break missingId;
      }

      id = R.id.iv_security_acc;
      ImageView ivSecurityAcc = ViewBindings.findChildViewById(rootView, id);
      if (ivSecurityAcc == null) {
        break missingId;
      }

      id = R.id.tv_owner_acc;
      TextView tvOwnerAcc = ViewBindings.findChildViewById(rootView, id);
      if (tvOwnerAcc == null) {
        break missingId;
      }

      id = R.id.tv_security_acc;
      TextView tvSecurityAcc = ViewBindings.findChildViewById(rootView, id);
      if (tvSecurityAcc == null) {
        break missingId;
      }

      return new ActivityAccountBinding((ConstraintLayout) rootView, account, as, cvOwnerAcc,
          cvSecurityAcc, ivOwnerAcc, ivSecurityAcc, tvOwnerAcc, tvSecurityAcc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
